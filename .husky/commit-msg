#!/bin/sh
# get commit-msg config
config=commit-msg.config.json

# set variables
enabled=$(jq -r .enabled $config)
revert=$(jq -r .revert $config)
types=($(jq -r '.types[]' $config))
min_length=$(jq -r .length.min $config)
max_length=$(jq -r .length.max $config)

# if no config or not enabled, exit hook and skip validation
if [[ ! -f $config || ! $enabled ]]; then
    exit 0
fi

# if revert then commit message can optionally be prefixed with revert:
if $revert; then
    regexp="${regexp}revert: )?(\w+)("
fi

# get all allowed types from config
for type in "${types[@]}"
do
    regexp="${regexp}$type|"
done

# if opening parenthesis then it must be closed and contain a scope
# type and/or scope must be followed by colon symbol
regexp="${regexp})(\(.+\))?: "

# set max and minimum length of commit message after the colon
regexp="${regexp}.{$min_length,$max_length}$"

# get the first line of the commit message
msg=$(head -1 $1)

# validate
if [[ ! $msg =~ $regexp ]]; then
  echo -e "\n\e[1m\e[31m[INVALID COMMIT MESSAGE]"
  echo -e "------------------------\033[0m\e[0m"
  echo -e "\e[1mValid types:\e[0m \e[34m${types[@]}\033[0m"
  echo -e "\e[1mMax length (first line):\e[0m \e[34m$max_length\033[0m"
  echo -e "\e[1mMin length (first line):\e[0m \e[34m$min_length\033[0m\n"

  # exit with an error
  exit 1
fi

exit 1